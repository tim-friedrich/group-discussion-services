$ ->
  if $('#pm-survey').length
    MAX_RESTART_SECONDS = 60
    ENDPOINT = '/survey'
    QUESTIONS = JSON.parse '<%= JSON.dump(JSON.load(Rails.root.join "db", "survey_questions.json")) %>'
    BIG5_OPTIONS = ["trifft gar nicht zu", "trifft eher nicht zu", "trifft eher zu", "trifft genau zu"]
    ANALYSIS_TEXTS = JSON.parse '<%= JSON.dump(JSON.load(Rails.root.join "db", "survey_analysis_texts.json")) %>'
    ANALYSIS_TEXT_ASSIGNMENTS =
      1: "low"
      2: "low"
      3: "low"
      4: "medium"
      5: "medium"
      6: "medium"
      7: "high"
      8: "high"
      9: "high"
    ANALYSIS_SHORT_ASSIGNMENTS =
      1: "•"
      2: "• •"
      3: "• • •"
      4: "• • • •"
      5: "• • • • •"
      6: "• • • • • •"
      7: "• • • • • • •"
      8: "• • • • • • • •"
      9: "• • • • • • • • •"
    ANALYSIS_LEVELS =
      low: "unterdurchschnittlichen"
      medium: "durchschnittlichen"
      high: "überdurchschnittlichen"
    ANALYSIS_GENDER = ["Frauen", "Männern"]
    ANALYSIS_AGE = ["unter 20", "20 - 50", "20 - 50", "20 - 50", "über 50"]

    leavePageWarning = ->
      "Wenn Sie den Test jetzt verlassen, muss er wieder von Anfang an ausgefüllt werden!"

    submitStep = ->
      if QUESTIONS[status.questionNumber].type == "info"
        nextStep()
      else if $('#pm-survey input[type=radio]:checked').length == 1
        status.results.push extractAnswer()
        nextStep()
      else
        displayError('Bitte wählen Sie eine der Antwortmöglichkeiten aus!')

    clearMarkup = ->
      $('#pm-survey').removeClass 'pm-survey-type-info pm-survey-type-statistics pm-survey-type-big5'
      $('#pm-survey-error').hide().text('')
      $('#pm-survey-text').text('')
      $('#pm-survey-options').text('')
      $('#pm-survey-button').hide()

    extractAnswer = ->
      question = QUESTIONS[status.questionNumber]
      answer   = $('#pm-survey input[type=radio]:checked')
      if question.type == 'statistic'
        type: question.type
        id: question.id
        value: answer[0].value
      else
        type: question.type
        value: answer[0].value
        scale: question.scale
        invert: !!question.invert

    generateOptionMarkup = (options) ->
      markup = ""
      optionTemplate = $('#pm-survey-option-template').html()
      Mustache.parse(optionTemplate)

      options.forEach (option, index) ->
        markup += Mustache.render optionTemplate,
          value: index
          description: option
          tabindex: index + 1

      markup

    generateBig5Markup = ->
      generateOptionMarkup BIG5_OPTIONS

    submitSurveyToServer = ->
      $.ajax
        type: "POST"
        url: ENDPOINT
        dataType: 'json'
        data:
          survey:
            results: status.results
        success: (response) ->
          displaySuccess(response)
        error: (error) ->
          displayError error.responseText

    displaySubmitted = ->
      clearMarkup()
      $('#pm-survey-text').text('Vielen Dank. Ihre Daten werden ausgewertet...')
      $('#pm-survey-button').hide()

    displaySuccess = (successData) ->
      clearMarkup()
      $('#pm-survey-button').hide()
      $('#pm-survey-progress').hide()
      $('#pm-survey-analysis').html(createAnalysis(successData))
      $('#pm-survey-heading').show()
      $('#pm-survey-analysis').show()
      status.backButtonUsed = true

    displayError = (errorText) ->
      $('#pm-survey-error').text(errorText).show()

    nextStep = ->
      history.pushState({questionNumber: status.questionNumber}, null)
      clearMarkup()
      saveInCookie(status)
      status.questionNumber += 1
      status.backButtonUsed = false
      question = QUESTIONS[status.questionNumber]

      if status.questionNumber > 1
        updateProgress(status.questionNumber - 1)

      if question
        # The condition key might be used in a different way (with a value) if necessary
        if question.condition && window.pmSurveyGender
          return nextStep();

        $('#pm-survey').addClass "pm-survey-type-#{question.type}"
        question_text = question.text

        if question.type == "big5"
          $('#pm-survey-options').html generateBig5Markup()
        else if question.type == 'statistic'
          $('#pm-survey-options').html generateOptionMarkup(question.options)
          question_text = "Für statistische Zwecke: " + question_text
        else
          $('#pm-survey-button').show()

        $('#pm-survey-text').html(question_text)

      else # survey done
        submitSurveyToServer(status.questionNumber)
        displaySubmitted()
        deleteCookie()
        window.onbeforeunload = null

    updateProgress = (currentProgress) ->
      $('#pm-survey-heading').hide()
      $('#pm-survey-progress').show()
      $('#pm-survey-progress').attr 'max', QUESTIONS.length - 1
      $('#pm-survey-progress').attr 'value', currentProgress

    createAnalysis = (successData) ->
      statistics = successData.survey.statistics
      delete successData.survey.statistics
      survey = successData.survey

      analysisIntroTemplate = $('#pm-survey-analysis-intro-template').html()
      analysisTextTemplate  = $('#pm-survey-analysis-text-template').html()
      analysisOutroTemplate = $('#pm-survey-analysis-outro-template').html()
      Mustache.parse(analysisIntroTemplate)
      Mustache.parse(analysisTextTemplate)
      Mustache.parse(analysisOutroTemplate)

      markup = Mustache.render analysisIntroTemplate,
        gender: ANALYSIS_GENDER[statistics.gender]
        age: ANALYSIS_AGE[statistics.age]

      Object.keys(survey).forEach (key) ->
        assignment = ANALYSIS_TEXT_ASSIGNMENTS[survey[key]]
        markup += Mustache.render analysisTextTemplate,
          analysisPoints: survey[key]
          analysisShortLevel: ANALYSIS_SHORT_ASSIGNMENTS[survey[key]]
          analysisTitle: ANALYSIS_TEXTS[key]["title"]
          analysisExplanation: ANALYSIS_TEXTS[key]["explanation"]
          analysisText: Mustache.render ANALYSIS_TEXTS[key][assignment]
          analysisLevel: ANALYSIS_LEVELS[assignment]

      markup + Mustache.render(analysisOutroTemplate)

    currentTimestamp = ->
      Math.floor(new Date().getTime() / 1000)

    saveInCookie = (statusToSave) ->
      statusToSave.updatedAt = currentTimestamp()
      $.cookie 'pm_survey', JSON.stringify(statusToSave)

    deleteCookie = ->
      $.cookie 'pm_survey', null

    initStatus = ->
      questionNumber: -1
      results: []
      updatedAt: Math.floor(new Date().getTime() / 1000)

    loadFromCookieOrInitStatus = ->
      if rawStatusFromCookie = $.cookie 'pm_survey'
        statusFromCookie = null
        try
          statusFromCookie = JSON.parse(rawStatusFromCookie)
        catch e
          # nothing

        if  !statusFromCookie ||
            !statusFromCookie.results ||
            !statusFromCookie.questionNumber ||
            !statusFromCookie.updatedAt ||
            MAX_RESTART_SECONDS < currentTimestamp() - statusFromCookie.updatedAt
          deleteCookie()
          initStatus()
        else
          statusFromCookie
      else
        initStatus()


    # # #
    # event handlers

    $('#pm-survey').on 'submit', (e) ->
      submitStep()
      e.preventDefault()

    $(document).on 'change', '#pm-survey-options input[type=radio]', (e) ->
      if $(e.target).is(':checked')
        setTimeout ->
          $('#pm-survey').submit()
        , 200

    $(document).on 'keypress', (e) ->
      if e.which >= 49 && e.which <= 57
        option = $("#pm-survey-options input[type=radio]")[e.which - 49]
        if option
          option.checked = "checked"
          setTimeout ->
            $('#pm-survey').submit()
          , 200
      else if e.which == 13
        $('#pm-survey').submit()
        e.preventDefault()

    window.addEventListener 'popstate', (e) ->
      if status.backButtonUsed
        history.pushState({questionNumber: status.questionNumber - 1}, null)
      else
        status.questionNumber = e.state.questionNumber
        nextStep()
        status.backButtonUsed = true


    # # #
    # init

    if document.location.pathname == "/survey"
      status = loadFromCookieOrInitStatus()
      status.backButtonUsed = true

      window.onbeforeunload = leavePageWarning
      window.onunload = ->
        window.onbeforeunload = null
        window.onunload = null

      nextStep()
    else if document.location.pathname == "/survey/result"
      $('#pm-survey-analysis').html(createAnalysis(window.pmSurveyResultData))
      $('#pm-survey-analysis').show()

