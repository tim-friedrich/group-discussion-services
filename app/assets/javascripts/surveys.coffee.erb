$ ->
  QUESTIONS = JSON.parse '<%= JSON.dump(JSON.load(Rails.root + "config/survey.json")) %>'
  OPTION_TEMPLATE = '<div class="radio"><label class="pm-survey-label"><input type="radio" name="{{identifier}}" value="{{value}}">{{description}}</label></div>'
  MAX_RESTART_SECONDS = 10

  submitStep = ->
    if QUESTIONS[status.questionNumber].type == "info"
      nextStep()
    else if $('#pm-survey input[type=radio]:checked').length == 1
      status.results[status.questionNumber] = extractAnswer()
      nextStep()
    else
      displayError('Bitte wählen Sie eine der Antwortmöglichkeiten aus!')

  clearMarkup = ->
    $('#pm-survey-error').text('')
    $('#pm-survey-text').text('')
    $('#pm-survey-options').text('')

  extractAnswer = ->
    answer = $('#pm-survey input[type=radio]:checked')
    id: answer[0].name
    value: answer[0].value

  generateOptionMarkup = (options, identifier) ->
    markup = ""
    options.forEach (option, index) ->
      markup += Mustache.render OPTION_TEMPLATE,
        value: index
        description: option
        identifier: identifier

    markup

  generateBig5Markup = (identifier) ->
    generateOptionMarkup ["trifft gar nicht zu", "trifft eher nicht zu", "trifft eher zu", "trifft genau zu"], identifier

  submitSurveyToServer = ->
    console.log 'submitting...'
    console.log status.results
    # status.done = true

  displayAlreadyDone = ->
    $('#pm-survey').text('already done')

  displaySuccess = ->
    $('#pm-survey').text('thank you')

  displayError = (errorText) ->
    $('#pm-survey-error').text(errorText)

  nextStep = ->
    clearMarkup()
    saveInCookie(status)
    status.questionNumber += 1
    question = QUESTIONS[status.questionNumber]
    if question
      question_text = question.text

      if question.type == "big5"
        $('#pm-survey-options').html generateBig5Markup(question.id)
      else if question.type == 'statistic'
        $('#pm-survey-options').html generateOptionMarkup(question.options, question.id)
        question_text = "Für statistische Zwecke: " + question_text

      $('#pm-survey-text').text(question_text)

      if status.questionNumber > 0
        $('#pm-survey-progress').text "Fortschritt: #{ Math.floor(Math.random() * 100) }%"

    else # survey done
      submitSurveyToServer()
      displaySuccess()

  currentTimestamp = ->
    Math.floor(new Date().getTime() / 1000)

  saveInCookie = (statusToSave) ->
    statusToSave.updatedAt = currentTimestamp()
    $.cookie 'pm_survey', JSON.stringify(statusToSave)

  initStatus = ->
    done: false
    questionNumber: -1
    results: []
    updatedAt: Math.floor(new Date().getTime() / 1000)

  loadFromCookieOrInitStatus = ->
    if rawStatusFromCookie = $.cookie 'pm_survey'
      statusFromCookie = null
      try
        statusFromCookie = JSON.parse(rawStatusFromCookie)
      catch e
        # nothing

      if  !statusFromCookie ||
          !statusFromCookie.results ||
          !statusFromCookie.questionNumber ||
          !statusFromCookie.updatedAt ||
          MAX_RESTART_SECONDS < currentTimestamp() - statusFromCookie.updatedAt
        $.cookie 'pm_survey', null
        initStatus()
      else
        statusFromCookie
    else
      initStatus()


  # # #
  # event handlers

  $('#pm-survey').on 'submit', (e) ->
    submitStep()
    e.preventDefault()


  # # #
  # init

  status = loadFromCookieOrInitStatus()
  if status.done
    displayAlreadyDone()
  else
    nextStep(status.questionNumber)
